# OER CHAPTER 3

## OBJECTIVES
After completing this chapter, students will be able to:

1. Identify and use control structures
2. Identify logical and relational operators, how they work, and the order of precedence
3. Distinguish the relationship of relational operators and simple data types
4. Identify how to form and evaluate logical (Boolean) expressions
5. Use one-way and/or two-way selection syntax
6. Demonstrate a switch statement in a program

##Introduction

In Chapter 3 we go over the basic concepts of functions, different types of functions, and their specific uses for C++. 
As well for functions; we also go over different operators such as the equality operator,assignment operator, or the BooLean operator. 
The equality operator determines if two expressions are equal. Furthermore we go over logical expressions which is a expression that evaulates true or false in code. 
It also decides whether or not to excute the state. 
## A Section Per Topic



## Review Questions

1. True/False: These control statements enable you to determine the order in which the statements are excuted

2. which of the follwoing describes this statement: "A logical expression that allows the statemetent to be either true or false

A. Cin 
B. Boolean expression
C. Logical statement
D. switch atructure 

3. Fill in the blank: Relational and logical expressions are evaluated from....

## Summary
-In C++, the symbol ==, which consists of two equal signs, is called the equality operator. This differentiates from the previous assignment operator we knew as a single = sign.
-The equality operator determines whe
ther two expressions are equal, whereas the assignment operator, =, assigns the value of an expression to a variable.
-When comparing characters the values increase with the alphabet but lowercase letters have larger value then uppercase letters.
-In a 1 way selection if an expression is true then the statement executes but if it is not true then the statement does not execute
-If the semicolon immediately follows the closing parenthesis, the if statement will operate on the empty statement.
-In a 2 way selection if the value of the expression is true, statement1 executes. If the value of the expression is false, statement 2 executes
-Boolean operators enable you to combine logical expressions.
-In C++, & and | are also operators. The meaning of these operators is different from the meaning of && and ||. Using & in place of && or | in place of || might result from a typographical error
-Relational and logical operators are evaluated from left to right
-Boolean expressions can be manipulated or processed in either of two ways: by using int variables or by using bool variables.
In a sequence of if-else statements, if more than one condition is true, only the statements associated with the first true condition will be executed. On the other hand, in a series of if statements, such as (b), if more than one condition evaluates to true, statements associated with each true condition will execute.
-To permit more complex statements, C++ provides a structure called a compound statement or a block of statements. This is done by enclosing between curly braces, { and }.
-When C++ evaluates a logical expression, any nonzero value is treated as TRUE
-One way to address possible input failure is to check the status of the input stream variable. You can check the status by using the input stream variable as the logical expression in an if-else statement, If the last input succeeded, the input stream variable evaluates to true if it is not it evaulates to false. 
## Key Terms
Logical expression
-An expression that evaluates to true or false is called a logical expression.
Decision maker
-Decides whether to execute the statement that follows it
Boolean operator
-Enable you to combine logical expressions.
Nested
-When one control statement is located within another
Short-circuit evaluation
-A process in which the computer evaluates a logical expression from left to right and stops as soon as the final value of the expression is known.
Switch structure
-This is used to handle multiway selection.

## Programming Exercises

## References
Relational Operators, Rebus Press, https://press.rebus.community/programmingfundamentals/chapter/relational-operators/
Understanding Python If-Else Statement, Simplilearn, 5/18/23, https://www.simplilearn.com/tutorials/python-tutorial/python-if-else-statement
JavaScript Switch Statement, W3schools, https://www.w3schools.com/js/js_switch.asp
Editor: Andrew Ritter
