Chapter 1 - Introduction to C++ Programming

## Objectives
After completing this chapter students will be able to:
1. Identify basic components of a C++ program, including functions, special symbols, and identifiers
2. Classify simple data types and use them in assignment statements
3. Use arithmetic operators, precedence, and expressions
4. Create assignment and input statements and the use of variables within statements.
5. Differentiate between type conversion and type casting
6. Develop output results using output statements
7. Identify syntax errors and debugging techniques
8. Write a basic C++ program 

## Introduction
In Chapter 1 we explore the basic concepts, language, and the core foundation for C++ beginners. 
We introduce basic C++ concepts such as Identifiers, special symbols, and functions. 
Identifiers act to assign variables specific unique names; While special symbols within C++ 
help define variables and in the program for advanced coding. Functions act as the molecular block 
of code. 

Afterward, in Chapter 1, we go over simple data types and how to use them in assignment statements. 
A simple Data type is a group of different types of data by specific value or 
certain types of mathematical and logical operations. Data types can also differ  
in programming language such as  lowercase, numbers, and punctuation. Furthermore, we 
also explore how to use  different arithmetic operators, precedence, and expressions.
This arithmetic system creates advanced mathematical C++ programs. 
The power to create assignments, and input statements within the use of variables within statements which provides 
a hands-on display to its users. In C++ we separate type conversion, and type casting to ensure data integrity. 

Finally, we learn to identify common syntax errors and explore debugging techniques to resolve issues and ensure smooth program execution.
Afterwords you will learn how to write a basic C++ program.  





## A section per topic

### Review Questions
1. True/False: Functions act as the molecular block of code.


2.  Identifiers can consist of letters, White space, and underscores.


3. Which of the following is not one of the best practices for naming identifiers?

A. Descriptive Names

B. Consistency

C. Not avoiding Abbreviations.

D. Using Function Names as Actions



## Chapter Summary
-Strings are used by double quotes and used as storage devices
-You must save code in secondary storage because programs and data must be loaded into the main memory to process, but they are lost when the computer is turned off, so to keep them, you must transfer them to secondary storage.
-Input and Output devices are essential in code and out of code; input devices in the real world consist of the keyboard of a computer, mouse, scanner, and camera. Output devices consist of a monitor and printer.
-Programming is a process of problem-solving that is done with many different techniques, such as Algorithm
-Structured Programming and Object-Oriented Programming are the two most popular approaches to programming design. A structured program consists of dividing problems into multiple subproblems,the solutions to all of these subproblems are then combined to solve the overall problem. Object-oriented programming is started by first identifying the components or objects that form the solution and then determining how these objects interact with each other.
-The compiler ignores all comments and comments are words that the program is not told to run
-A named constant must be initialized when it is declared and a variable cannot be used until it is declared
-The arithmetic operators in C++ are addition (+), subtraction (-), multiplication (*), division (/), and modulus (%).
-Integral data types are classified into the following categories: char, short, int, long, bool, unsigned char, unsigned short, unsigned int, unsigned long, long long, and unsigned long long.
-The three data types that can manipulate decimals are float, double, and long double
- In C++, << is the stream insertion operator.
-Every variable must have a name, value, data type, and size
## Key Terms
variable
  : Named values that are subject to change throughout the program.A memory location 
Function
  : A collection of statements including variables and operators that, when run correctly, accomplish a task
Initialized
  : The first time a value is placed in a variable
Keywords(reversed words)
  : Words that have predefined meanings and functionalities within the programming language
Data Structures
  : Ways to organize data to support more efficient operations
Variable declaration
  : Lets the compiler know the data type being stored in the computerâ€™s  memory.
String
  : A storage device identified by double quotations
Loops
  : For-loop and while-loop can execute segments of code repeatedly without having to type them out repeatedly
Assignment operator
  : Assigns a value to a variable
Integer v.s. Floating point number
  : Integer is a number with no decimal; therefore when multiplied or divided in code, you get no decimals, but when using a Floating point number, you have decimal points, and therefore, so does you're product or quotient
Conditional Operator (If else)
  : if a given condition is satisfied, then the code in the conditional segment is run, but if not, it is ignored
Output statement
  : An output on the standard output device using cout and <<
Software
  : Program written to perform specific tasks

## Programming Exercises
**Grade Calculator**

A program calculates grades based on a set of input numbers  and gives a grade corresponding to the scale:
A 90-100
B 80-89
C 70-79
D 60-69
F 0-59

Timmy is trying to calculate his semester grade average using the grades he received from his six classes. His grades comprised 86.3, 95.7, 98.2, 76.5, 80.0, and 72.3. To calculate his grade point average, he must add all of these grades and divide them by 6.0 to receive a floating point number value for his semester GPA.
## References
GeeksforGeeks https://www.geeksforgeeks.org/cpp-while-loop/ 
GeeksforGeeks https://www.geeksforgeeks.org/cpp-for-loop/?ref=lbp

Jaedon - 
Andrew - Summary and Key Terms
Cam - Introduction and review questions 
Kameron - Editor and Section per topic
